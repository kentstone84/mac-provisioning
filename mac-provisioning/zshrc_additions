### === Custom ZSH Additions === ###
# This file is managed by your provisioning repo.
# Your main ~/.zshrc should source it if present:
#   if [ -f ~/.zshrc_additions ]; then
#     source ~/.zshrc_additions
#   fi

### Homebrew ###
eval "$(/opt/homebrew/bin/brew shellenv)"

### LLVM / Clang ###
# Prefer Homebrew’s LLVM over system one if installed
export PATH="/opt/homebrew/opt/llvm/bin:$PATH"
export LDFLAGS="-L/opt/homebrew/opt/llvm/lib $LDFLAGS"
export CPPFLAGS="-I/opt/homebrew/opt/llvm/include $CPPFLAGS"

### OpenSSL ###
# Explicitly point tools to Homebrew’s OpenSSL (v1.1 + v3)
export LDFLAGS="-L/opt/homebrew/opt/openssl@3/lib -L/opt/homebrew/opt/openssl@1.1/lib $LDFLAGS"
export CPPFLAGS="-I/opt/homebrew/opt/openssl@3/include -I/opt/homebrew/opt/openssl@1.1/include $CPPFLAGS"
export PKG_CONFIG_PATH="/opt/homebrew/opt/openssl@3/lib/pkgconfig:/opt/homebrew/opt/openssl@1.1/lib/pkgconfig:$PKG_CONFIG_PATH"

### Readline / LibYAML / Libffi ###
export LDFLAGS="-L/opt/homebrew/opt/readline/lib -L/opt/homebrew/opt/libyaml/lib -L/opt/homebrew/opt/libffi/lib $LDFLAGS"
export CPPFLAGS="-I/opt/homebrew/opt/readline/include -I/opt/homebrew/opt/libyaml/include -I/opt/homebrew/opt/libffi/include $CPPFLAGS"
export PKG_CONFIG_PATH="/opt/homebrew/opt/readline/lib/pkgconfig:/opt/homebrew/opt/libyaml/lib/pkgconfig:/opt/homebrew/opt/libffi/lib/pkgconfig:$PKG_CONFIG_PATH"

### Ruby (via chruby + ruby-install) ###
# Load chruby if installed
if [ -f /opt/homebrew/opt/chruby/share/chruby/chruby.sh ]; then
  source /opt/homebrew/opt/chruby/share/chruby/chruby.sh
  source /opt/homebrew/opt/chruby/share/chruby/auto.sh
fi

### Python ###
export PATH="/opt/homebrew/opt/python/libexec/bin:$PATH"

### Node / NPM (if using asdf or nvm later, this can be replaced) ###
export PATH="/opt/homebrew/bin:$PATH"

### Utilities ###
alias ll='ls -lh'
alias la='ls -lha'
alias grep='grep --color=auto'

### Prompt (Starship if installed) ###
if command -v starship &> /dev/null; then
  eval "$(starship init zsh)"
fi

### GitHub CLI Autocomplete ###
if command -v gh &> /dev/null; then
  eval "$(gh completion -s zsh)"
fi
